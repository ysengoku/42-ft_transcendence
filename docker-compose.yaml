# version is osbolete

services:
  front:
    container_name: frontend
    build:
      context: ./front  # Contexte de la construction (répertoire contenant le Dockerfile de front)
      dockerfile: Dockerfile  # Fichier Dockerfile pour ce service
    volumes:
      - ./front/app:/app  # Monte le dossier app de l'hôte dans /app du conteneur
      - /app/node_modules   # Volume pour node_modules (cela permet de ne pas écraser le dossier node_modules)
    ports:
      - "5173:5173"
    expose:
      - "5173"
    env_file:
      - .env
    depends_on:
      - back

  back:
    container_name: backend
    build:
      context: ./back  # Contexte de la construction (répertoire contenant le Dockerfile de back)
      dockerfile: Dockerfile  # Fichier Dockerfile pour ce service
      args:
        DATABASE_URL: ${DATABASE_URL}
    ports:
      - "8000:8000"
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - database
    volumes:
      - ./back:/app

  database:
    container_name: database
    image: postgres:13
    build:
      context: ./database  # Contexte de la construction (répertoire contenant le Dockerfile pour la base de données)
      dockerfile: Dockerfile  # Fichier Dockerfile pour ce service
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - transcendance_network

  nginx:
    container_name: server
    build:
      context: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf #Permet de personnaliser ou de surcharger certaines parties de la configuration sans avoir à toucher à l'image Docker elle-même. Cela permet par exemple de modifier la configuration de Nginx ou d'ajouter des fichiers à la volée, ce qui est très pratique pendant le développement, où les fichiers de configuration peuvent changer fréquemment.
      - ./front:/usr/share/nginx/html # Dossier contenant les fichiers statiques de l'application
    ports:
      - "1026:1026"
    expose:
      - "1026"
    depends_on:
      - front
    networks:
      - transcendance_network

volumes:
  db_data:

networks:
  transcendance_network:
    driver: bridge
