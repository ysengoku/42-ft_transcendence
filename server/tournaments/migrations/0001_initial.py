# Generated by Django 5.1.4 on 2025-06-30 07:33

import django.db.models.deletion
import django.utils.timezone
import pong.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pong', '0004_alter_gameroomplayer_number_of_connections'),
        ('users', '0008_delete_useronlinestatus'),
    ]

    operations = [
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(editable=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('ongoing', 'Ongoing'), ('finished', 'Finished')], default='pending', max_length=10)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('playing', 'Playing'), ('eliminated', 'Eliminated'), ('qualified', 'Qualified'), ('winner', 'Winner')], default='pending', max_length=12)),
                ('current_round', models.PositiveIntegerField(default=0)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Bracket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winners_score', models.PositiveIntegerField(default=0)),
                ('losers_score', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('ongoing', 'Ongoing'), ('finished', 'Finished'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('score', models.CharField(blank=True, max_length=7)),
                ('game_id', models.UUIDField(blank=True, null=True)),
                ('game_room', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pong.gameroom')),
                ('participant1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brackets_p1', to='tournaments.participant')),
                ('participant2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brackets_p2', to='tournaments.participant')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournaments.participant')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brackets', to='tournaments.round')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('ongoing', 'Ongoing'), ('finished', 'Finished'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('required_participants', models.PositiveIntegerField()),
                ('settings', models.JSONField(default=pong.models.get_default_game_room_settings, verbose_name='Settings')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_tournaments', to='tournaments.participant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='round',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='tournaments.tournament'),
        ),
        migrations.AddField(
            model_name='participant',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='tournaments.tournament'),
        ),
        migrations.AlterUniqueTogether(
            name='round',
            unique_together={('tournament', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together={('profile', 'tournament'), ('tournament', 'alias')},
        ),
    ]
