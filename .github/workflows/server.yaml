name: Backend Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  backend:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:16.0-bookworm
        env:
          POSTGRES_USER: ${{ secrets.DB_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_USER }}
          POSTGRES_DB: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      # Step 1: git clone and configure the git environment for the tests
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Step 3: Install Ruff and dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          pip install -r server/requirements.txt

      # Step 4: Run Ruff linting
      - name: Run Ruff linting
        run: |
          ruff server --fix --config server/pyproject.toml

      # Step 5: Run Django migrations
      - name: Run Django migrations
        working-directory: server/
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          python manage.py makemigrations
          python manage.py migrate

      # Step 6: Run tests
      - name: Run Django unit tests
        working-directory: server/
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          python manage.py test
